{"ast":null,"code":"var _jsxFileName = \"/home/becode/intro-react with nick/src/components/ListTodo.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListTodo = _ref => {\n  let {\n    todos,\n    setTodos\n  } = _ref;\n  const handleCheck = id => {\n    const newList = todos.map(todo => {\n      if (todo.id === id) {\n        todo.done = !todo.done;\n      }\n      return todo;\n    });\n    setTodos(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"p-5\",\n    children: todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mr-3\",\n          type: \"checkbox\",\n          id: todo.id,\n          onChange: () => {\n            handleCheck(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: todo.done ? \"line-through\" : \"no-underline\" /*? pose une question si c'est oui - 1er, si c'est non - le 2nd */,\n          htmlFor: todo.id,\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = ListTodo;\nexport default ListTodo;\nvar _c;\n$RefreshReg$(_c, \"ListTodo\");","map":{"version":3,"names":["ListTodo","todos","setTodos","handleCheck","id","newList","map","todo","done","name"],"sources":["/home/becode/intro-react with nick/src/components/ListTodo.jsx"],"sourcesContent":["\n\nconst ListTodo = ({todos, setTodos}) => {\n    \n    const handleCheck = (id) =>{\n        const newList = todos.map((todo)=>{\n            if(todo.id === id){\n                todo.done = !todo.done;\n            }\n            return todo;\n        })\n        setTodos(newList);\n    };\n\n    return(\n        <ul className=\"p-5\">\n            {todos.map((todo) =>{\n                return(\n                    <li key={todo.id}>\n                        <input \n                            className=\"mr-3\"\n                            type=\"checkbox\" \n                            id={todo.id}\n                            onChange={()=> {handleCheck(todo.id)}}/>\n                        <label className={todo.done ? \"line-through\" :\"no-underline\"} /*? pose une question si c'est oui - 1er, si c'est non - le 2nd */\n                        htmlFor={todo.id}>{todo.name}</label>\n                    </li>\n                    );\n                })\n            } \n        </ul>\n    )\n};\n\nexport default ListTodo;"],"mappings":";;AAEA,MAAMA,QAAQ,GAAG,QAAuB;EAAA,IAAtB;IAACC,KAAK;IAAEC;EAAQ,CAAC;EAE/B,MAAMC,WAAW,GAAIC,EAAE,IAAI;IACvB,MAAMC,OAAO,GAAGJ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAG;MAC9B,IAAGA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAC;QACdG,IAAI,CAACC,IAAI,GAAG,CAACD,IAAI,CAACC,IAAI;MAC1B;MACA,OAAOD,IAAI;IACf,CAAC,CAAC;IACFL,QAAQ,CAACG,OAAO,CAAC;EACrB,CAAC;EAED,oBACI;IAAI,SAAS,EAAC,KAAK;IAAA,UACdJ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAI;MAChB,oBACI;QAAA,wBACI;UACI,SAAS,EAAC,MAAM;UAChB,IAAI,EAAC,UAAU;UACf,EAAE,EAAEA,IAAI,CAACH,EAAG;UACZ,QAAQ,EAAE,MAAK;YAACD,WAAW,CAACI,IAAI,CAACH,EAAE,CAAC;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eAC5C;UAAO,SAAS,EAAEG,IAAI,CAACC,IAAI,GAAG,cAAc,GAAE,cAAe,CAAC;UAC9D,OAAO,EAAED,IAAI,CAACH,EAAG;UAAA,UAAEG,IAAI,CAACE;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GAPhCF,IAAI,CAACH,EAAE;QAAA;QAAA;QAAA;MAAA,QAQX;IAET,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEL;AAEb,CAAC;AAAC,KA9BIJ,QAAQ;AAgCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}