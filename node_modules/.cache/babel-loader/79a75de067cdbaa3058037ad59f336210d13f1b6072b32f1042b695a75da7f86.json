{"ast":null,"code":"var _jsxFileName = \"/home/becode/BecodeProjects/hamilton-7-to-do-react-TreshMiralissa/intro-react/src/components/todoList.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  let idUnique = 0;\n  const initialTodos = [\"Translate informations\", \"Learn React\", \"Be Awesome !\"];\n  const [todos, setTodos] = useState(initialTodos);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), \" \", todo]\n    }, idUnique++, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"8yCmoPUuqM1vaUbV/+pWostrM30=\");\n_c = TodoList;\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleChange = () => {\n      this.setState({\n        isChecked: !this.state.isChecked\n      });\n    };\n    this.state = {\n      isChecked: true\n    };\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoList","idUnique","initialTodos","todos","setTodos","map","todo","Checkbox","Component","constructor","props","toggleChange","setState","isChecked","state"],"sources":["/home/becode/BecodeProjects/hamilton-7-to-do-react-TreshMiralissa/intro-react/src/components/todoList.js"],"sourcesContent":["// import React from \"react\";\nimport React, { useState } from \"react\";\n\n\nexport default function TodoList() {\n  let idUnique = 0;\n  const initialTodos = [\"Translate informations\", \"Learn React\", \"Be Awesome !\"];\n  const [todos, setTodos] = useState(initialTodos);\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <li key={idUnique++}>\n          <input type=\"checkbox\" /> {todo}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: true,\n    };\n  }\n  toggleChange = () => {\n    this.setState({\n      isChecked: !this.state.isChecked,\n    });\n  }\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC,IAAIC,QAAQ,GAAG,CAAC;EAChB,MAAMC,YAAY,GAAG,CAAC,wBAAwB,EAAE,aAAa,EAAE,cAAc,CAAC;EAC9E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACG,YAAY,CAAC;EAChD,oBACE;IAAA,UACGC,KAAK,CAACE,GAAG,CAAEC,IAAI,iBACd;MAAA,wBACE;QAAO,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,OAAEA,IAAI;IAAA,GADxBL,QAAQ,EAAE;MAAA;MAAA;MAAA;IAAA,QAGpB;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAET;AAAC,GAbuBD,QAAQ;AAAA,KAARA,QAAQ;AAehC,MAAMO,QAAQ,SAAST,KAAK,CAACU,SAAS,CAAC;EACrCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAKfC,YAAY,GAAG,MAAM;MACnB,IAAI,CAACC,QAAQ,CAAC;QACZC,SAAS,EAAE,CAAC,IAAI,CAACC,KAAK,CAACD;MACzB,CAAC,CAAC;IACJ,CAAC;IARC,IAAI,CAACC,KAAK,GAAG;MACXD,SAAS,EAAE;IACb,CAAC;EACH;AAMF;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}